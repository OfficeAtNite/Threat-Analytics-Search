{"version":3,"file":"js/migration.js","mappings":"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","sources":["webpack://threat-analytics-search/webpack/runtime/chunk loaded","webpack://threat-analytics-search/./src/js/shared/constants.js","webpack://threat-analytics-search/./src/js/shared/encryption.js","webpack://threat-analytics-search/./src/js/shared/config_file.js","webpack://threat-analytics-search/./src/js/shared/misc.js","webpack://threat-analytics-search/./src/js/shared/storage.js","webpack://threat-analytics-search/./src/js/migration.js","webpack://threat-analytics-search/webpack/bootstrap","webpack://threat-analytics-search/webpack/runtime/compat get default export","webpack://threat-analytics-search/webpack/runtime/define property getters","webpack://threat-analytics-search/webpack/runtime/global","webpack://threat-analytics-search/webpack/runtime/hasOwnProperty shorthand","webpack://threat-analytics-search/webpack/runtime/node module decorator","webpack://threat-analytics-search/webpack/runtime/publicPath","webpack://threat-analytics-search/webpack/runtime/jsonp chunk loading","webpack://threat-analytics-search/webpack/runtime/nonce","webpack://threat-analytics-search/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","export const MiscURLs = {\n  ABOUT_US_URL: \"https://www.criticalstart.com/company/\",\n  CRITICALSTART_URL: \"https://www.criticalstart.com\",\n  EXTENSION_HOME_URL:\n    \"https://github.com/AdvancedThreatAnalytics/threat-analytics-search\",\n  INSTALLED_URL:\n    \"https://www.criticalstart.com/threat-analytics-chrome-plugin/\",\n  ISSUES_URL:\n    \"https://github.com/AdvancedThreatAnalytics/threat-analytics-search/issues\",\n  RELEASES_URL:\n    \"https://github.com/AdvancedThreatAnalytics/threat-analytics-search/releases\",\n};\n\nexport const StoreKey = {\n  CARBON_BLACK: \"carbon_black\",\n  LAST_CONFIG_DATA: \"last_config_data\",\n  NET_WITNESS: \"netwitness_investigator\",\n  RSA_SECURITY: \"rsa_security_analytics\",\n  SEARCH_PROVIDERS: \"search_providers\",\n  SETTINGS: \"settings\",\n};\n\nexport const CONFIG_FILE_OPTIONS = [\n  {\n    key: \"configurationURL\",\n    label: \"File URL\",\n    type: \"input\",\n    validateEmpty: true,\n    validateUrl: true,\n  },\n  { key: \"configEncrypted\", label: \"Encrypted\", type: \"checkbox\" },\n  {\n    key: \"configEncryptionKey\",\n    label: \"Encryption Key\",\n    type: \"input\",\n    validateEmpty: true,\n    validateOn: \"configEncrypted\",\n  },\n  {\n    key: \"autoUpdateConfig\",\n    label: \"Update periodically (once per week)\",\n    type: \"checkbox\",\n  },\n  {\n    key: \"lastConfigUpdate\",\n    label: \"Last Updated on:\",\n    type: \"text\",\n  },\n];\n\nexport const CBC_CONFIG = [\n  {\n    key: \"CBCConfigEnable\",\n    type: \"checkbox\",\n    label: \"Enable Carbon Black Settings\",\n  },\n  { key: \"CBCConfigUseHttps\", type: \"checkbox\", label: \"HTTPS (SSL) Enabled\" },\n  {\n    key: \"CBCConfigHost\",\n    type: \"text\",\n    label: \"Carbon Black Hostname or IP Address\",\n  },\n  {\n    key: \"CBCConfigPort\",\n    type: \"text\",\n    label:\n      \"Port Number (Leave blank if port 80 and HTTP or port 443 and HTTPS)\",\n  },\n  {\n    key: \"CBCConfigURLVersion\",\n    type: \"text\",\n    label: \"Carbon Black URL Version (Default is 1)\",\n  },\n  {\n    key: \"CBCConfigNewTab\",\n    type: \"checkbox\",\n    label: \"Switch Focus to New Tab\",\n  },\n  {\n    key: \"CBCConfigPopup\",\n    type: \"checkbox\",\n    label: \"Enable debug popup window\",\n  },\n];\n\nexport const NWI_CONFIG = [\n  {\n    key: \"NWIConfigEnable\",\n    type: \"checkbox\",\n    label: \"Enable NetWitness Investigator Settings\",\n  },\n  {\n    key: \"NWIConfigExampleLink\",\n    type: \"text\",\n    label:\n      \"Paste example link from NetWitness Investigator to autofill settings\",\n    autofiller: true,\n    placeholder: \"e.g. https://netwitness.com:81/?collection=12\",\n  },\n  { key: \"NWIConfigHost\", type: \"text\", label: \"Host (IP Address/Hostname)\" },\n  { key: \"NWIConfigPort\", type: \"text\", label: \"Port Number\" },\n  { key: \"NWIConfigCollectionName\", type: \"text\", label: \"Collection Name\" },\n  {\n    key: \"NWIConfigGMT\",\n    type: \"checkbox\",\n    label: \"Use GMT time (no time zone adjustment)\",\n  },\n  {\n    key: \"NWIConfigRange1\",\n    type: \"number\",\n    label: \"Search Range 1 in Hour(s)\",\n  },\n  {\n    key: \"NWIConfigRange2\",\n    type: \"number\",\n    label: \"Search Range 2 in Hour(s)\",\n  },\n  {\n    key: \"NWIConfigRange3\",\n    type: \"number\",\n    label: \"Search Range 3 in Hour(s)\",\n  },\n  {\n    key: \"NWIConfigRange4\",\n    type: \"number\",\n    label: \"Search Range 4 in Hour(s)\",\n  },\n  {\n    key: \"NWIConfigPopup\",\n    type: \"checkbox\",\n    label: \"Enable debug popup window\",\n  },\n];\n\n// TODO: Should rename field names to just 'key' and 'label'.\nexport const MERGE_DROPDOWN_ITEMS = [\n  { key: \"merge\", label: \"Merge\" },\n  { key: \"override\", label: \"Override\" },\n  { key: \"ignore\", label: \"Ignore\" },\n];\n\nexport const MERGE_OPTIONS = [\n  {\n    key: \"mergeSearchProviders\",\n    label: \"Search Providers\",\n    type: \"dropdown\",\n    menuItems: MERGE_DROPDOWN_ITEMS,\n  },\n  {\n    key: \"mergeGroups\",\n    label: \"Override Group names\",\n    type: \"checkbox\",\n  },\n  {\n    key: \"mergeRSA.config\",\n    label: \"Override Security Analytics Configuration\",\n    type: \"checkbox\",\n  },\n  {\n    key: \"mergeRSA.queries\",\n    label: \"Security Analytics Queries\",\n    type: \"dropdown\",\n    menuItems: MERGE_DROPDOWN_ITEMS,\n  },\n  {\n    key: \"mergeNWI.config\",\n    label: \"Override Netwitness Configuration\",\n    type: \"checkbox\",\n  },\n  {\n    key: \"mergeNWI.queries\",\n    label: \"Netwitness Queries\",\n    type: \"dropdown\",\n    menuItems: MERGE_DROPDOWN_ITEMS,\n  },\n  {\n    key: \"mergeCBC.config\",\n    label: \"Override Carbon Black Configuration\",\n    type: \"checkbox\",\n  },\n  {\n    key: \"mergeCBC.queries\",\n    label: \"Carbon Black Queries\",\n    type: \"dropdown\",\n    menuItems: MERGE_DROPDOWN_ITEMS,\n  },\n];\n\nexport const NWI_RANGE_LENGTH = 4;\n\nexport const RSA_CONFIG = [\n  {\n    key: \"RSAConfigEnable\",\n    type: \"checkbox\",\n    label: \"Enable RSA Security Analytics Settings\",\n  },\n  {\n    key: \"RSAConfigExampleLink\",\n    type: \"text\",\n    label:\n      \"Paste example link from Security Analytics Investigation to autofill settings\",\n    autofiller: true,\n    placeholder: \"e.g. https://security.com:81/investigation/12/\",\n  },\n  {\n    key: \"RSAConfigHost\",\n    type: \"text\",\n    label: \"Security Analytics Host (IP Address/Hostname)\",\n  },\n  {\n    key: \"RSAConfigPort\",\n    type: \"text\",\n    label:\n      \"Port Number (leave blank if port 80 and HTTP or port 443 and HTTPS)\",\n  },\n  { key: \"RSAConfigDevId\", type: \"text\", label: \"Device ID\" },\n  { key: \"RSAConfigUseHttps\", type: \"checkbox\", label: \"HTTPS (SSL) Enabled\" },\n  {\n    key: \"RSAConfigRange1\",\n    type: \"number\",\n    label: \"Search Range 1 in Hour(s)\",\n  },\n  {\n    key: \"RSAConfigRange2\",\n    type: \"number\",\n    label: \"Search Range 2 in Hour(s)\",\n  },\n  {\n    key: \"RSAConfigRange3\",\n    type: \"number\",\n    label: \"Search Range 3 in Hour(s)\",\n  },\n  {\n    key: \"RSAConfigRange4\",\n    type: \"number\",\n    label: \"Search Range 4 in Hour(s)\",\n  },\n  {\n    key: \"RSAConfigNewTab\",\n    type: \"checkbox\",\n    label: \"Switch Focus to New Tab\",\n  },\n  {\n    key: \"RSAConfigPopup\",\n    type: \"checkbox\",\n    label: \"Enable debug popup window\",\n  },\n];\n\nexport const RSA_RANGE_LENGTH = 4;\n\nexport const SEARCH_RESULT_OPTIONS = [\n  {\n    key: \"useGroups\",\n    label: \"Enable groups\",\n    type: \"checkbox\",\n  },\n  {\n    key: \"resultsInBackgroundTab\",\n    label: \"Open results in a background tab\",\n    type: \"checkbox\",\n  },\n  {\n    key: \"enableAdjacentTabs\",\n    label: \"The new tab should be next to the current tab\",\n    type: \"checkbox\",\n  },\n  {\n    key: \"openGroupsInNewWindow\",\n    label: \"Open group tabs in new window\",\n    type: \"checkbox\",\n  },\n  {\n    key: \"enableOptionsMenuItem\",\n    label: \"Show link to extension options at the end of context menu\",\n    type: \"checkbox\",\n  },\n];\n\nexport const EXPORT_FILE_NAME = \"Settings.json\";\n\nexport default {\n  MiscURLs,\n  StoreKey,\n  CBC_CONFIG,\n  CONFIG_FILE_OPTIONS,\n  MERGE_DROPDOWN_ITEMS,\n  MERGE_OPTIONS,\n  NWI_CONFIG,\n  NWI_RANGE_LENGTH,\n  RSA_CONFIG,\n  RSA_RANGE_LENGTH,\n  SEARCH_RESULT_OPTIONS,\n  EXPORT_FILE_NAME,\n};\n","import aesjs from \"aes-js\";\nimport md5 from \"md5\";\n\nexport function decryptAES(data, key) {\n  // Decode the ciphertext and remove the salt part.\n  data = Array.from(atob(data), (c) => c.charCodeAt(0));\n\n  const salt = data.slice(8, 16);\n  const s2a = Array.from(unescape(encodeURIComponent(key)), (c) =>\n    c.charCodeAt(0)\n  );\n  const pbe = openSSLKey(s2a, salt);\n\n  data = data.slice(16, data.length);\n\n  // Decrypt the ciphertext using aesjs.\n  const aesCbc = new aesjs.ModeOfOperation.cbc(pbe.key, pbe.iv);\n  const decryptedBytes = aesCbc.decrypt(data);\n\n  // Remove pre added paddings and parse from byte to utf8.\n  return aesjs.utils.utf8.fromBytes(aesjs.padding.pkcs7.strip(decryptedBytes));\n}\n\nexport function encryptAES(data, password, salt) {\n  if (!salt) {\n    salt = randArr(8);\n  }\n  const s2a = Array.from(unescape(encodeURIComponent(password)), (c) =>\n    c.charCodeAt(0)\n  );\n  const pbe = openSSLKey(s2a, salt);\n\n  // Spells out 'Salted__'\n  let saltBlock = [83, 97, 108, 116, 101, 100, 95, 95].concat(salt);\n\n  // Convert string to byte and add padding to be multiple of 16 bytes\n  data = new TextEncoder().encode(data);\n  data = aesjs.padding.pkcs7.pad(data);\n\n  // Encrypt the cyphertext using aesjs.\n  const aesCbc = new aesjs.ModeOfOperation.cbc(pbe.key, pbe.iv);\n  let encryptedBytes = aesCbc.encrypt(data);\n\n  // Prepend salt part.\n  encryptedBytes = saltBlock.concat(Array.from(encryptedBytes));\n\n  // Encode encrypted bytes and return it.\n  const uint8Array = new Uint8Array(encryptedBytes);\n  return btoa(String.fromCharCode.apply(null, uint8Array));\n}\n\nexport function randArr(num) {\n  let result = [],\n    i;\n  for (i = 0; i < num; i++) {\n    result = result.concat(Math.floor(Math.random() * 256));\n  }\n  return result;\n}\n\n/**\n * This function is needed to provide backward compatibility and calculate\n * the key and iv in the same way as GibberishAes.\n */\nexport function openSSLKey(passwordArr, saltArr) {\n  const rounds = 3;\n  const data00 = passwordArr.concat(saltArr);\n\n  let md5_hash = [];\n  let result = [];\n\n  md5_hash[0] = aesjs.utils.hex.toBytes(md5(data00));\n  result = md5_hash[0];\n\n  for (let i = 1; i < rounds; i++) {\n    md5_hash[i] = aesjs.utils.hex.toBytes(md5(md5_hash[i - 1].concat(data00)));\n    result = result.concat(md5_hash[i]);\n  }\n\n  return {\n    key: result.slice(0, 32),\n    iv: result.slice(32, 48),\n  };\n}\n\nexport default {\n  decryptAES,\n  encryptAES,\n  openSSLKey,\n};\n","import _ from \"lodash\";\n\nimport { decryptAES } from \"./encryption\";\nimport { StoreKey } from \"./constants\";\nimport LocalStore from \"./local_store\";\nimport { isUrl } from \"./misc\";\n\n// --- Constants --- //\n\nconst CONFIG_MAPPING = [\n  { index: 0, field: \"configurationURL\" },\n  { index: 1, field: \"useGroups\", type: \"bool\" },\n  { index: 2, field: \"configEncrypted\", type: \"bool\" },\n  { index: 3, field: \"configEncryptionKey\" },\n  { index: 4, field: \"autoUpdateConfig\", type: \"bool\" },\n];\n\nconst GROUP_INDEXES = {\n  number: 0,\n  name: 1,\n};\n\nconst QUERY_MAPPING = [\n  { index: 0, field: \"menuIndex\" },\n  { index: 1, field: \"label\" },\n  { index: 2, field: \"query\" },\n  { index: 3, field: \"enabled\", type: \"bool\" },\n];\n\nconst PROVIDER_MAPPING = [\n  { index: 0, field: \"menuIndex\" },\n  { index: 1, field: \"label\" },\n  { index: 2, field: \"link\" },\n  { index: 3, field: \"enabled\", type: \"bool\" },\n  { index: 4, field: \"fromConfig\", type: \"bool\" },\n  { index: 5, field: \"group\" },\n  { index: 6, field: \"postEnabled\", type: \"bool\" },\n  { index: 7, field: \"postValue\" },\n  { index: 8, field: \"proxyEnabled\", type: \"bool\" },\n  { index: 9, field: \"proxyUrl\" },\n];\n\n// --- Utility functions --- //\n\nfunction mapArrayToObject(array, mapping) {\n  return _.mapValues(_.keyBy(mapping, \"field\"), (meta) => {\n    const value = _.get(array, meta.index);\n    return meta.type === \"bool\" ? value === true || value === \"true\" : value;\n  });\n}\n\nfunction mapObjectToArray(object, mapping) {\n  // NOTE: this method assumes that for all items in mapping: \"mapping.indexOf(item) === item.index\".\n  return _.map(mapping, (meta) => _.get(object, meta.field));\n}\n\nasync function updateSearchProviders(\n  settings,\n  newProviders,\n  updateActions,\n  forceOverride\n) {\n  // Get menu items (with current search providers).\n  let searchProviders =\n    (await LocalStore.getOne(StoreKey.SEARCH_PROVIDERS)) || [];\n\n  // Execute update actions.\n  _.each(updateActions, (action) => {\n    _.each(searchProviders, (provider) => {\n      if (action.target.indexOf(provider.link) >= 0) {\n        if (action.link) {\n          provider.link = action.link;\n        }\n        if (action.label) {\n          provider.label = action.label;\n        }\n      }\n    });\n  });\n\n  // Check if the new list of search providers should be merged or should override current values.\n  const mergeProviderOption = forceOverride\n    ? \"override\"\n    : _.get(settings, \"mergeSearchProviders\", \"merge\");\n\n  if (mergeProviderOption === \"override\") {\n    searchProviders = newProviders;\n  } else if (mergeProviderOption === \"merge\") {\n    for (let i = 0; i < newProviders.length; i++) {\n      const newProvider = newProviders[i];\n\n      // Add provider if isn't on the current list.\n      if (\n        !_.find(\n          searchProviders,\n          (provider) => provider.link === newProvider.link\n        )\n      ) {\n        searchProviders.push(newProvider);\n      }\n    }\n  }\n\n  // Save list of search providers.\n  await LocalStore.setOne(StoreKey.SEARCH_PROVIDERS, searchProviders);\n}\n\n// --- Main functions --- //\n\nconst ConfigFile = {\n  updateNow: async function () {\n    const settings = (await LocalStore.getOne(StoreKey.SETTINGS)) || {};\n    let errMsg = null;\n\n    const invalidUrl = !isUrl(settings.configurationURL);\n    const missingKey =\n      settings.configEncrypted && !settings.configEncryptionKey;\n\n    if (invalidUrl || missingKey) {\n      errMsg = `Update failed - Invalid ${\n        missingKey ? \"Encryption Key\" : \"URL\"\n      }`;\n    } else {\n      try {\n        // Execute request to get configuration file.\n        const response = await fetch(settings.configurationURL);\n        if (response.status >= 200 && response.status < 300) {\n          let dataRaw = await response.text();\n          dataRaw = dataRaw.replace(/\\n\\r|\\r\\n/g, \"\");\n\n          // Check if the file should be decripted.\n          if (settings.configEncrypted) {\n            var k1 = settings.configEncryptionKey;\n            try {\n              dataRaw = decryptAES(dataRaw, k1);\n            } catch (decErr) {\n              console.error(decErr);\n              errMsg = \"Update failed - Decryption Error\";\n            }\n          }\n\n          // Parse data object.\n          const data = JSON.parse(dataRaw);\n          await ConfigFile.parseJSONFile(data, false);\n        } else {\n          errMsg = \"Update failed - Invalid URL\";\n        }\n      } catch (fileErr) {\n        console.error(fileErr);\n        errMsg = \"Update failed - Invalid File\";\n      }\n    }\n\n    // Update timestamp and error message.\n    await LocalStore.setOne(StoreKey.LAST_CONFIG_DATA, {\n      date: new Date().getTime(),\n      errorMsg: errMsg,\n    });\n\n    // Return success flag.\n    return !errMsg;\n  },\n\n  updateSpecialProvider: async function (\n    storeKey,\n    newData,\n    mergeKey,\n    forceOverride\n  ) {\n    const settings = await LocalStore.getOne(StoreKey.SETTINGS);\n    const shouldOverrideConfig =\n      forceOverride || _.get(settings, mergeKey + \".config\", false);\n    const queriesMergeOption = forceOverride\n      ? \"override\"\n      : _.get(settings, mergeKey + \".queries\", \"merge\");\n\n    const provData = (await LocalStore.getOne(storeKey)) || {};\n\n    // Override configuration (if need)\n    if (shouldOverrideConfig || _.isNil(provData.config)) {\n      provData.config = _.get(newData, \"Config\", {});\n    }\n\n    // Check if queries should be merged ,overriden or ignored.\n    const newQueries = ConfigFile.parseQueries(_.get(newData, \"Queries\", []));\n    if (queriesMergeOption === \"merge\") {\n      if (!_.isArray(provData.queries)) {\n        provData.queries = [];\n      }\n\n      for (let i = 0; i < newQueries.length; i++) {\n        const newQuery = newQueries[i];\n\n        // Update values from outdated queries.\n        const aliases = _.get(newQuery, \"metadata.alias\");\n        if (_.isArray(aliases)) {\n          _.each(provData.queries, (item) => {\n            if (aliases.indexOf(item.query) >= 0) {\n              item.query = newQuery.query;\n            }\n          });\n        }\n\n        // Add query if isn't on the current list.\n        if (\n          !_.find(provData.queries, (item) => item.query === newQuery.query)\n        ) {\n          provData.queries.push(newQuery);\n        }\n      }\n    } else if (queriesMergeOption === \"override\") {\n      provData.queries = newQueries;\n    }\n\n    return LocalStore.setOne(storeKey, provData);\n  },\n\n  sanitizeSettings: async function () {\n    var defaultFile = await ConfigFile.getDefaultJSON();\n\n    // Sanitize basic settings and groups.\n    var oldSettings = await LocalStore.getOne(StoreKey.SETTINGS);\n    var newSettings = ConfigFile.parseBasicSettings(defaultFile.config);\n    newSettings.providersGroups = ConfigFile.parseGroups(defaultFile.groups);\n    if (_.isObject(oldSettings) && !_.isArray(oldSettings.providersGroups)) {\n      delete oldSettings.providersGroups;\n    }\n    await LocalStore.setOne(\n      StoreKey.SETTINGS,\n      _.assign(newSettings, oldSettings)\n    );\n\n    // Sanitize search providers.\n    var providers = await LocalStore.getOne(StoreKey.SEARCH_PROVIDERS);\n    if (_.isEmpty(providers)) {\n      await LocalStore.setOne(\n        StoreKey.SEARCH_PROVIDERS,\n        ConfigFile.parseProviders(defaultFile.searchproviders)\n      );\n    }\n\n    await ConfigFile.sanitizeSpecialProviders();\n  },\n\n  sanitizeSpecialProviders: async function () {\n    var defaultFile = await ConfigFile.getDefaultJSON();\n\n    var specialProviders = [\n      { storeKey: StoreKey.CARBON_BLACK, fileKey: \"CBC\" },\n      { storeKey: StoreKey.NET_WITNESS, fileKey: \"NWI\" },\n      { storeKey: StoreKey.RSA_SECURITY, fileKey: \"RSA\" },\n    ];\n    _.forEach(specialProviders, async function (special) {\n      var data = (await LocalStore.getOne(special.storeKey)) || {};\n      if (!_.isObject(data.config)) {\n        data.config = _.get(defaultFile, `${special.fileKey}.Config`) || {};\n      }\n      if (!_.isArray(data.queries)) {\n        data.queries = ConfigFile.parseQueries(\n          _.get(defaultFile, `${special.fileKey}.Queries`)\n        );\n      }\n      LocalStore.setOne(special.storeKey, data);\n    });\n  },\n\n  parseJSONFile: async function (newData, overrideAll) {\n    // Update main settings.\n    const settings = (await LocalStore.getOne(StoreKey.SETTINGS)) || {};\n\n    // - Update basic settings (if need).\n    if (overrideAll && !_.isEmpty(newData.config)) {\n      _.assign(settings, ConfigFile.parseBasicSettings(newData.config));\n    }\n\n    // - Update group names in the local store (if need).\n    const groups = newData.groups;\n    if ((overrideAll || settings.mergeGroups) && !_.isEmpty(groups)) {\n      if (\n        (overrideAll && groups.length >= 3) ||\n        _.isEmpty(settings.providersGroups)\n      ) {\n        settings.providersGroups = ConfigFile.parseGroups(groups);\n      } else {\n        for (let k = 0; k < settings.providersGroups.length; k++) {\n          if (groups[k]) {\n            settings.providersGroups[k].name = groups[k][GROUP_INDEXES.name];\n          } else if (k < 3) {\n            settings.providersGroups[k].enabled = false;\n          } else {\n            settings.providersGroups.splice(\n              3,\n              settings.providersGroups.length - 3\n            );\n          }\n        }\n      }\n    }\n\n    // - Save settings in storage.\n    await LocalStore.setOne(StoreKey.SETTINGS, settings);\n\n    // Update search providers.\n    const newProviders = ConfigFile.parseProviders(newData.searchproviders);\n    await updateSearchProviders(\n      settings,\n      newProviders,\n      _.get(newData, \"update.providers\"),\n      overrideAll\n    );\n\n    // Update configuration values and queries for RSA, NWI and CBC.\n    await ConfigFile.updateSpecialProvider(\n      StoreKey.RSA_SECURITY,\n      newData.RSA,\n      \"mergeRSA\",\n      overrideAll\n    );\n    await ConfigFile.updateSpecialProvider(\n      StoreKey.NET_WITNESS,\n      newData.NWI,\n      \"mergeNWI\",\n      overrideAll\n    );\n    await ConfigFile.updateSpecialProvider(\n      StoreKey.CARBON_BLACK,\n      newData.CBC,\n      \"mergeCBC\",\n      overrideAll\n    );\n  },\n\n  parseBasicSettings: function (settingsRaw) {\n    const settingsArray = _.get(settingsRaw, 0, []);\n    const settingsObj = mapArrayToObject(settingsArray, CONFIG_MAPPING);\n\n    return {\n      ...settingsObj,\n\n      resultsInBackgroundTab: true,\n      enableAdjacentTabs: true,\n      openGroupsInNewWindow: true,\n      enableOptionsMenuItem: true,\n\n      mergeGroups: settingsObj.useGroups,\n      mergeSearchProviders: \"merge\",\n      mergeCBC: { config: false, queries: \"merge\" },\n      mergeNWI: { config: false, queries: \"merge\" },\n      mergeRSA: { config: false, queries: \"merge\" },\n    };\n  },\n\n  prepareBasicSettings: function (settings) {\n    return [mapObjectToArray(settings, CONFIG_MAPPING)];\n  },\n\n  parseGroups: function (groupsArray) {\n    if (_.isArray(groupsArray) && groupsArray.length >= 3) {\n      return _.map(groupsArray, function (group, index) {\n        return {\n          name: _.get(group, GROUP_INDEXES.name),\n          enabled: index < 2,\n        };\n      });\n    }\n\n    return [];\n  },\n\n  prepareGroups: function (groups) {\n    return _.map([0, 1, 2], function (index) {\n      const number = index + 1 + \"\";\n      return [number, _.get(groups, `${index}.name`)];\n    });\n  },\n\n  parseProviders: function (providers) {\n    return _.map(providers, function (providerArray) {\n      return mapArrayToObject(providerArray, PROVIDER_MAPPING);\n    });\n  },\n\n  prepareProviders: function (providers) {\n    return _.map(providers, function (providerObject) {\n      return mapObjectToArray(providerObject, PROVIDER_MAPPING);\n    });\n  },\n\n  parseQueries: function (queries) {\n    return _.map(queries, function (queryArray) {\n      return mapArrayToObject(queryArray, QUERY_MAPPING);\n    });\n  },\n\n  prepareQueries: function (queries) {\n    return _.map(queries, function (queryObject) {\n      return mapObjectToArray(queryObject, QUERY_MAPPING);\n    });\n  },\n\n  getDefaultJSON: async function () {\n    try {\n      var response = await fetch(\"../settings.json\");\n      return await response.json();\n    } catch (err) {\n      return {};\n    }\n  },\n\n  generateJSONFile: async function () {\n    var settings = (await LocalStore.getOne(StoreKey.SETTINGS)) || {};\n    var rsa = (await LocalStore.getOne(StoreKey.RSA_SECURITY)) || {};\n    var nwi = (await LocalStore.getOne(StoreKey.NET_WITNESS)) || {};\n    var cbc = (await LocalStore.getOne(StoreKey.CARBON_BLACK)) || {};\n    var providers = (await LocalStore.getOne(StoreKey.SEARCH_PROVIDERS)) || [];\n\n    return {\n      searchproviders: ConfigFile.prepareProviders(providers),\n      groups: ConfigFile.prepareGroups(settings.providersGroups),\n      config: ConfigFile.prepareBasicSettings(settings),\n\n      RSA: {\n        Config: rsa.config,\n        Queries: ConfigFile.prepareQueries(rsa.queries),\n      },\n      NWI: {\n        Config: nwi.config,\n        Queries: ConfigFile.prepareQueries(nwi.queries),\n      },\n      CBC: {\n        Config: cbc.config,\n        Queries: ConfigFile.prepareQueries(cbc.queries),\n      },\n    };\n  },\n};\n\nexport default ConfigFile;\n","import _ from \"lodash\";\n\nexport function getGroupProviders(groupIndex, providers) {\n  var mask = Math.pow(2, groupIndex);\n  return _.filter(providers, function (item) {\n    // Note that the group's value (from providers) uses each bit of the number for indicate to\n    // which groups it belongs; so \"1\" (0b0001) it's for group 1, \"2\" (0b0010) it's for group 2,\n    // \"3\" (0b0011) it's for groups 1 and 2, and \"4\" (0b0100) it's for group 3.\n    return item.enabled && item.group & mask;\n  });\n}\n\nexport function getProviderTargetURL(provider, selectionText) {\n  var targetURL;\n\n  if (provider.postEnabled === true || provider.postEnabled === \"true\") {\n    targetURL =\n      \"postHandler.html?name=\" + provider.label + \"&data=\" + selectionText;\n  } else {\n    targetURL = provider.link.replace(/TESTSEARCH/g, selectionText);\n    targetURL = targetURL.replace(/%s/g, selectionText);\n    targetURL = targetURL.replace(\n      /TESTB64SEARCH/g,\n      encodeURIComponent(btoa(selectionText))\n    );\n  }\n\n  return targetURL;\n}\n\nexport function isDate(date) {\n  return new Date(date) !== \"Invalid Date\" && !isNaN(new Date(date));\n}\n\nexport function isJson(str) {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n\n// A link is searchable if it contains TESTSEARCH or TESTB64SEARCH or %s.\nexport function isSearchable(link) {\n  return (\n    _.includes(link, \"TESTSEARCH\") ||\n    _.includes(link, \"TESTB64SEARCH\") ||\n    _.includes(link, \"%s\")\n  );\n}\n\nexport function isUrl(string) {\n  try {\n    const url = new URL(string);\n    return [\"http:\", \"https:\"].includes(url.protocol);\n  } catch (_) {\n    return false;\n  }\n}\n\nexport default {\n  getGroupProviders,\n  getProviderTargetURL,\n  isDate,\n  isJson,\n  isSearchable,\n  isUrl,\n};\n","/**\n * Utility for simplify interactions with the local storage.\n *\n * @deprecated: use LocalStore instead, since the local storage can't be used on service workers.\n */\nconst Storage = {\n  setItem: function (key, value) {\n    try {\n      window.localStorage.removeItem(key);\n      window.localStorage.setItem(key, value);\n    } catch (err) {\n      console.error(err);\n    }\n  },\n\n  getItem: function (key) {\n    var value;\n    try {\n      value = window.localStorage.getItem(key);\n    } catch (err) {\n      console.error(err);\n      value = \"null\";\n    }\n    return value;\n  },\n\n  clearAll: function () {\n    window.localStorage.clear();\n  },\n};\n\nexport default Storage;\n","import \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"../styles/theme.scss\";\n\nimport _ from \"lodash\";\n\nimport { StoreKey } from \"./shared/constants\";\nimport { isDate } from \"./shared/misc\";\nimport ConfigFile from \"./shared/config_file\";\nimport LocalStore from \"./shared/local_store\";\nimport Storage from \"./shared/storage\";\n\n/**\n * This script is run when updating the extension from version 4.x.x to version 5.0.0 (or higher) and\n * his main tasks is to relocate the user's settings saved from the local storage (i.e. \"localStorage\")\n * to the Chrome's storage (i.e. \"chrome.storage.local\").\n *\n * The need for this change is because starting from version 5.0.0 the extension uses Manifest v3\n * which don't longer supports background pages, and instead uses services workers (and since service\n * workers don't has access to the local storage, we must move all data saved there into Chrome's\n * storage which can be accessed by both service workers and standard scripts).\n */\n\n// These URLs are deprecated, default settings should be read from the GitHub repository.\nvar OBSOLETES_CONFIG_URL = [\n  \"http://www.criticalstart.com/cschromeplugin/criticalstart.txt\",\n  \"https://www.criticalstart.com/wp-content/uploads/2018/02/criticalstart.txt\",\n];\n\n// Wait for the page to be loaded to execute the initialization function.\ndocument.addEventListener(\"DOMContentLoaded\", async function () {\n  // Get default settings.\n  const defaultFile = await ConfigFile.getDefaultJSON();\n\n  // Migrate data.\n  await Promise.all([\n    migrateGeneralSettings(defaultFile),\n    migrateSearchProviders(defaultFile),\n    migrateSpecialProvider(\n      StoreKey.CARBON_BLACK,\n      \"CBC\",\n      \"_CBCConfig\",\n      \"_CBCallquery\",\n      defaultFile\n    ),\n    migrateSpecialProvider(\n      StoreKey.NET_WITNESS,\n      \"NWI\",\n      \"_NWIConfig\",\n      \"_NWIallquery\",\n      defaultFile\n    ),\n    migrateSpecialProvider(\n      StoreKey.RSA_SECURITY,\n      \"RSA\",\n      \"_RSAConfig\",\n      \"_RSAallquery\",\n      defaultFile\n    ),\n    migrateOthers(),\n  ]);\n\n  // Update contextual menu.\n  chrome.runtime.sendMessage({ action: \"updateContextualMenu\" });\n\n  // Close current tab.\n  chrome.tabs.getCurrent(function (tab) {\n    chrome.tabs.remove(tab.id);\n  });\n});\n\nfunction migrateGeneralSettings(defaultFile) {\n  const defaultBasic = ConfigFile.parseBasicSettings(defaultFile.config);\n  const defaultGroups = ConfigFile.parseGroups(defaultFile.groups);\n\n  // If previous URL is empty or has a deprecated value change it to default.\n  let configUrl = Storage.getItem(\"_configUrl\");\n  if (_.isEmpty(configUrl) || OBSOLETES_CONFIG_URL.indexOf(configUrl) >= 0) {\n    configUrl = defaultBasic.configurationURL;\n  }\n\n  const useGroups =\n    Storage.getItem(\"_configUseGroups\") === \"true\" ||\n    _.get(defaultBasic, \"useGroups\", false);\n\n  return LocalStore.setOne(StoreKey.SETTINGS, {\n    configurationURL: configUrl,\n    useGroups: useGroups,\n    configEncrypted: Storage.getItem(\"_configEnc\") === \"true\",\n    configEncryptionKey: Storage.getItem(\"_configEncKey\") || null,\n    autoUpdateConfig:\n      Storage.getItem(\"_configAutoRefresh\") === \"true\" ||\n      _.get(defaultBasic, \"autoUpdateConfig\", false),\n\n    providersGroups: [\n      {\n        name: Storage.getItem(\"_group1Name\") || _.get(defaultGroups, \"0.name\"),\n        enabled: true,\n      },\n      {\n        name: Storage.getItem(\"_group2Name\") || _.get(defaultGroups, \"1.name\"),\n        enabled: true,\n      },\n      {\n        name: Storage.getItem(\"_group3Name\") || _.get(defaultGroups, \"2.name\"),\n        enabled: Storage.getItem(\"_enableGroup3\") == \"true\",\n      },\n    ],\n\n    // Note that these options aren't defined by configuration files.\n    resultsInBackgroundTab: Storage.getItem(\"_askbg\") !== \"false\",\n    enableAdjacentTabs: Storage.getItem(\"_asknext\") !== \"false\",\n    openGroupsInNewWindow: Storage.getItem(\"_asknewwindow\") !== \"false\",\n    enableOptionsMenuItem: Storage.getItem(\"_askoptions\") !== \"false\",\n\n    mergeGroups: useGroups,\n    mergeSearchProviders: \"merge\",\n    mergeCBC: { config: false, queries: \"merge\" },\n    mergeNWI: { config: false, queries: \"merge\" },\n    mergeRSA: { config: false, queries: \"merge\" },\n  });\n}\n\nfunction migrateSearchProviders(defaultFile) {\n  return LocalStore.setOne(\n    StoreKey.SEARCH_PROVIDERS,\n    ConfigFile.parseProviders(\n      tryJSONparse(Storage.getItem(\"_allsearch\")) ||\n        _.get(defaultFile, \"searchproviders\", [])\n    )\n  );\n}\n\nfunction migrateSpecialProvider(\n  storeKey,\n  fileKey,\n  configKey,\n  queryKey,\n  defaultFile\n) {\n  return LocalStore.setOne(storeKey, {\n    config:\n      tryJSONparse(Storage.getItem(configKey)) ||\n      _.get(defaultFile, `${fileKey}.Config`, {}),\n    queries: ConfigFile.parseQueries(\n      tryJSONparse(Storage.getItem(queryKey)) ||\n        _.get(defaultFile, `${fileKey}.Queries`, [])\n    ),\n  });\n}\n\nfunction migrateOthers() {\n  return LocalStore.setOne(\n    StoreKey.LAST_CONFIG_DATA,\n    parseLastRefresh(Storage.getItem(\"_configLastRefresh\"))\n  );\n}\n\nfunction parseLastRefresh(item) {\n  let error, date;\n\n  if (!_.isNil(item) && isDate(item)) {\n    date = new Date(item).getTime();\n  } else {\n    error = item;\n  }\n\n  return {\n    date: date,\n    errorMsg: error,\n  };\n}\n\nfunction tryJSONparse(string) {\n  var res;\n  try {\n    res = JSON.parse(string);\n  } catch (err) {\n    res = null;\n  }\n  return res;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"./\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t440: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkthreat_analytics_search\"] = self[\"webpackChunkthreat_analytics_search\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [654,242,456], () => (__webpack_require__(260)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","StoreKey","CARBON_BLACK","LAST_CONFIG_DATA","NET_WITNESS","RSA_SECURITY","SEARCH_PROVIDERS","SETTINGS","decryptAES","data","key","salt","Array","from","atob","c","charCodeAt","slice","pbe","passwordArr","saltArr","data00","concat","md5_hash","result","i","iv","openSSLKey","unescape","encodeURIComponent","length","decryptedBytes","decrypt","CONFIG_MAPPING","index","field","type","QUERY_MAPPING","PROVIDER_MAPPING","mapArrayToObject","array","mapping","meta","value","mapObjectToArray","object","ConfigFile","updateNow","async","settings","errMsg","invalidUrl","string","url","URL","includes","protocol","_","isUrl","configurationURL","missingKey","configEncrypted","configEncryptionKey","response","fetch","status","dataRaw","text","replace","k1","decErr","console","error","JSON","parse","parseJSONFile","fileErr","date","Date","getTime","errorMsg","updateSpecialProvider","storeKey","newData","mergeKey","forceOverride","shouldOverrideConfig","queriesMergeOption","provData","config","newQueries","parseQueries","queries","newQuery","aliases","item","indexOf","query","push","sanitizeSettings","defaultFile","getDefaultJSON","oldSettings","newSettings","parseBasicSettings","providersGroups","parseGroups","groups","providers","parseProviders","searchproviders","sanitizeSpecialProviders","specialProviders","fileKey","special","overrideAll","mergeGroups","k","name","enabled","splice","newProviders","updateActions","searchProviders","action","provider","target","link","label","mergeProviderOption","newProvider","updateSearchProviders","RSA","NWI","CBC","settingsRaw","settingsObj","resultsInBackgroundTab","enableAdjacentTabs","openGroupsInNewWindow","enableOptionsMenuItem","useGroups","mergeSearchProviders","mergeCBC","mergeNWI","mergeRSA","prepareBasicSettings","groupsArray","group","prepareGroups","providerArray","prepareProviders","providerObject","queryArray","prepareQueries","queryObject","json","err","generateJSONFile","rsa","nwi","cbc","Config","Queries","setItem","window","localStorage","removeItem","getItem","clearAll","clear","OBSOLETES_CONFIG_URL","migrateGeneralSettings","defaultBasic","defaultGroups","configUrl","autoUpdateConfig","migrateSearchProviders","tryJSONparse","migrateSpecialProvider","configKey","queryKey","parseLastRefresh","isNaN","isDate","res","document","addEventListener","Promise","all","chrome","runtime","sendMessage","tabs","getCurrent","tab","remove","id","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","obj","prop","prototype","hasOwnProperty","nmd","paths","children","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","some","chunkLoadingGlobal","self","forEach","bind","nc","__webpack_exports__"],"sourceRoot":""}